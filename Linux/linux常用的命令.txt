1.用户切换：su（root用户，输root用户密码）；su+用户名（切换到某个用户）；sudo su(用户切换到root用户，输用户密码)
2.修改主机名：gedit /ect/hostname
3.修改网络解析主机名：gedit/vim /etc/hosts
4.cut处理行，cut -d '分割符' -f n(选取哪一段)/n1-n2（n1到n2）
	     cut -c N-M/N/N- 打印第N到M个字符/第N个字符/N到尾字符
5.grep '匹配字符' filename：
	-v:不包含目标字符行
	-i:忽略大小写不同
	-n:顺便输出行
	-P:基本正则
6.sort:排序
	-f:忽略大小写的差异
	-r:反向排序
	-t:分隔符
	-k:选取哪个区间
	-n:使用纯数字排序
7.uniq:排序完之后，重复的仅列出一个显示
	-i:忽略大小写不同
	-c:进行计数
8.wc:统计
	-l:仅列出行
	-w:仅列出多少字
	-m:字符数
9.sed [-nefri] [动作]:
	-n:只有经过处理那行才显示出来
	-e:直接在命令行模式上进行sed的动作编辑
	-f:直接将sed的动作写在一个文件，-f filename则可以执行filename内的sed动作
	-r:支持正则表达式
	-i:直接修改读取的文件内容，而不是由屏幕输出。
[动作] 'n1(,n2)function'：
	a:新增，a的后面可以接字符串，而这些字符串会在新的一行出现
	c:替换，c的字符串可以替换n1,n2之间的行
	d:删除，因为删除，所以d后面不加任何参数
	i:插入，i的后面可以接字符串，而这些字符串会在新的一行出现
	p:打印，将某个选择的数据打印出来，通常sed -n一起运行
	s:替换，通常1，2s/old/new/g
10.printf '打印格式' 实际内容
	\a:警告声音
	\b:退格键
	\f:清除屏幕
	\n:输出新的一行
	\r:Enter键
	\t:水平的TAB键
	\v:垂直的TAB键
	%ns:n数字，输出字符
	%ni:n数字，输出整数
	%n.Nf:浮点数，例如%10.2f
11.awk：数据处理
   awk '条件类型 1{动作 1}，条件类型2 {动作 2}......' filename
   last -n 5 | awk '{print $1 "\t" $3}' 
12.tr 删除或替换一段文字中字符
	tr [-ds] SET1...:
	-d:删除指定信息中的SET1字符串
	-s:替换重复的字符
last | tr '[a-z]' '[A-Z]' :输出小写字母换成大写字母
last | tr -s ' ' '\n'：空格替换为换行











