Effective C++
STL源码解析
TCP/IP:协议森林  
Linux：linux系统、linux命令
数据结构/算法：经典排序算法等、红黑树等

《 鸟哥的Linux私房菜 基础学习篇》 鸟哥 著；人民邮电出版社
《 鸟哥的Linux私房菜 服务器架设篇》 鸟哥 著；机械工业出版社
作者： IT程序狮 
链接：http://www.imooc.com/article/1375
来源：慕课网
作为一个学校不太好，非科班的同学，跟大神收们比还是有些差距的( (**) 比如内核及TDF大佬 @赛罗・奥特曼）。楼主拿到成都美团的offer和百度的offer后就没有参加别的校招了，其他笔试也没去做了
(**) ，上面就是我的全部面经。
下面说一下我的学习经验，再分享些学习资源，有需要的可以自取

总结一下经验，有些常见的问题(比如线程进程区别，extern C,虚函数,IPC)可以深入去回答，面试官考这些问题其实是想了解学习的深度如何，这个就跟平时的积累有关。有些问题提前准备，不要临时去发挥，比如：自我介绍，offer意向，优缺点等的问题，个人项目和实习经历一定要提前复习，反复去演练，看看有哪些可以提升的地方。算法题要多练(leetcode，剑指offer)，特别是剑指offer。面经可以多看，毕竟很多问题提前准备大有益处，也可以查漏补缺，还有一点，能走内推尽量内推，可以免去不少精力。

分享一些学习资料

这个是侯捷的C++教程视频，非常非常好的教学视频涵盖了内存管理，STL(从源码层面分析)，C++11这些内容，面试关于内存管理，STL的内容，学会了视频里的可以说是秒杀这些问题，这里我骗下赞，求大家赏个脸，点个赞，涨涨经验(*_*)

链接: https://pan.baidu.com/s/1qXQynz2 密码: fus4


还有一些书籍推荐给大家,其实都是些常见的书，需要的看看就行：


C++：

《C++ primer》这不用说了吧，用了都说好。

《STL源码剖析》模板，traits，数据结构。。这个对我面试加成挺大的，看了几遍后，仿了个小STL

《深度探索C++对象模型》虚表，多继承，虚继承，NRVO。。。。

《Effective C++》学些C++技巧

还有些比较杂的就不推荐了

算法与数据结构：

我看的是《算法》，红皮书，跟着coursera mooc(Algorithms I,II)走一遍，做做课后lab，功力大升

《算法导论》，没看完，查漏补缺用，补充上面书没提到的动态规划，B树等知识

剩下就是刷leetcode oj，楼主刷的不多就把前150道搞定了，听说某大佬大二刷了300多道，惭愧。。

网络：

先看《计算机网络自顶向下方法》，再看《TCP/IP详解》

操作系统:

必须推荐一下神书《深入理解计算机系统》，内功大法好，面试吹逼必备

然后看《现代操作系统》，主要看进程，线程，内存管理，文件系统

实践的书推荐一下《操作系统真象还原》，实现一个小内核,挺好玩的，记得 @赛罗・奥特曼 大佬也推荐过。看之前回顾一下CSAPP的汇编那章。

Linux

stevens那几本圣经书，不在多说。。。

设计模式

简单易懂《head first 设计模式》，看了之后了解下设计模式，但我觉得这东西还是要落实到工程上，否则就是空谈。。。

其他的就是编译原理啥的，有兴趣的可以看看。。。《编程语言实现模式》这书挺有意思的，教你写parser啥的。然后是《编译原理及实践》，讲解基本原理LR,递归下降，DFA,NFA，程序编译过程的原理都涵盖了，但不深入。。。再深点就是大名鼎鼎的龙书《编译原理》，这个在看了前面两本书的基础下看就没啥压力。。看完这些书写点Parser，Lexer还是挺有意思的。。有兴趣玩玩再代码生成，优化等等，楼主才疏学浅玩不动，只看了点编译后端的原理。。。

关于分布式的学习大家也可以向我推荐一下方法,还是有些simple and naive的，一直都在学习理论，缺少实践，，准备学下Redis(*_*),再看点源码




汇编语言（masm汇编，王爽）、x86从实模式到保护模式、c++primer、effective c++、more effective c++（面试常问点）、深度探索c++对象模型（了解c++的底层实现机制，多态实现）、STL源码剖析、Linux鸟哥私房菜、现代操作系统、深入理解计算机系统（elf看懂之后，可不看程序员的自我修养）、现代操作系统、tcp/ip卷二、Unix环境高级编程、Unix网络编程


编译语言、脚本语言、开发环境、前沿知识；

听清楚并搞懂问题、冷静思考、努力解决，不轻易放弃、自信并谦虚；